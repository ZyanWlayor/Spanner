/**
 * @description Handle file size readability
 * @param {Integer} value file size of byte unit
 * @returns {String} readable file size
 */
function readableSize(value){
    if(null==value||value==''){
        return "0 Bytes";
    }
    var unitArr = new Array("Bytes","KB","MB","GB","TB","PB","EB","ZB","YB");
    var index=0;
    var srcsize = parseFloat(value);
    index=Math.floor(Math.log(srcsize)/Math.log(1024));
    var size =srcsize/Math.pow(1024,index);
    size=size.toFixed(2);// decimal digit to keep
    return size+unitArr[index];
}

/**
 * @description random num between min and max (include min and max)
 * @param {Integer} rMi min
 * @param {Integer} rMa max
 * @returns {Integer}
 */
function random(rMi, rMa) { return ~~((Math.random() * (rMa - rMi + 1)) + rMi); }

/**
 * @description a guid generator
 * @returns {String} a guid eg. '9a9681bb-4dfa-6750-5ae4-9530209d8a9d'
 */
function newGuid() {
    var guid = "";
    for (var i = 1; i <= 32; i++) {
        var n = Math.floor(Math.random() * 16.0).toString(16);
        guid += n;
        if ((i == 8) || (i == 12) || (i == 16) || (i == 20))
            guid += "-";
    }
    return guid;
}

/**
 * @description datetime formatter
 * @param {Date} value a date object struct by `new Date(*)`
 * @param {String} fmt a fmt string like "MM-dd ..."
 * @returns {String}
 */
function dateTimeFormat(value, fmt) {
    var o = {
        "M+": value.getMonth() + 1, //月份
        "d+": value.getDate(), //日
        "h+": value.getHours(), //小时
        "m+": value.getMinutes(), //分
        "s+": value.getSeconds(), //秒
        "q+": Math.floor((value.getMonth() + 3) / 3), //季度
        "S": value.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (value.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}

export { dateTimeFormat, newGuid as guid, random, readableSize };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1pbmRleC5qcyIsInNvdXJjZXMiOlsiLi4vbGlicy9nZW5lcmljL3JlYWRhYmxlU2l6ZS5qcyIsIi4uL2xpYnMvZ2VuZXJpYy9yYW5kb20uanMiLCIuLi9saWJzL2dlbmVyaWMvZ3VpZC5qcyIsIi4uL2xpYnMvZ2VuZXJpYy9kYXRlVGltZUZvcm1hdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBkZXNjcmlwdGlvbiBIYW5kbGUgZmlsZSBzaXplIHJlYWRhYmlsaXR5XG4gKiBAcGFyYW0ge0ludGVnZXJ9IHZhbHVlIGZpbGUgc2l6ZSBvZiBieXRlIHVuaXRcbiAqIEByZXR1cm5zIHtTdHJpbmd9IHJlYWRhYmxlIGZpbGUgc2l6ZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWFkYWJsZVNpemUodmFsdWUpe1xuICAgIGlmKG51bGw9PXZhbHVlfHx2YWx1ZT09Jycpe1xuICAgICAgICByZXR1cm4gXCIwIEJ5dGVzXCI7XG4gICAgfVxuICAgIHZhciB1bml0QXJyID0gbmV3IEFycmF5KFwiQnl0ZXNcIixcIktCXCIsXCJNQlwiLFwiR0JcIixcIlRCXCIsXCJQQlwiLFwiRUJcIixcIlpCXCIsXCJZQlwiKTtcbiAgICB2YXIgaW5kZXg9MDtcbiAgICB2YXIgc3Jjc2l6ZSA9IHBhcnNlRmxvYXQodmFsdWUpO1xuICAgIGluZGV4PU1hdGguZmxvb3IoTWF0aC5sb2coc3Jjc2l6ZSkvTWF0aC5sb2coMTAyNCkpO1xuICAgIHZhciBzaXplID1zcmNzaXplL01hdGgucG93KDEwMjQsaW5kZXgpO1xuICAgIHNpemU9c2l6ZS50b0ZpeGVkKDIpOy8vIGRlY2ltYWwgZGlnaXQgdG8ga2VlcFxuICAgIHJldHVybiBzaXplK3VuaXRBcnJbaW5kZXhdO1xufSIsIi8qKlxuICogQGRlc2NyaXB0aW9uIHJhbmRvbSBudW0gYmV0d2VlbiBtaW4gYW5kIG1heCAoaW5jbHVkZSBtaW4gYW5kIG1heClcbiAqIEBwYXJhbSB7SW50ZWdlcn0gck1pIG1pblxuICogQHBhcmFtIHtJbnRlZ2VyfSByTWEgbWF4XG4gKiBAcmV0dXJucyB7SW50ZWdlcn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmFuZG9tKHJNaSwgck1hKSB7IHJldHVybiB+figoTWF0aC5yYW5kb20oKSAqIChyTWEgLSByTWkgKyAxKSkgKyByTWkpOyB9IiwiLyoqXG4gKiBAZGVzY3JpcHRpb24gYSBndWlkIGdlbmVyYXRvclxuICogQHJldHVybnMge1N0cmluZ30gYSBndWlkIGVnLiAnOWE5NjgxYmItNGRmYS02NzUwLTVhZTQtOTUzMDIwOWQ4YTlkJ1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuZXdHdWlkKCkge1xuICAgIHZhciBndWlkID0gXCJcIjtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8PSAzMjsgaSsrKSB7XG4gICAgICAgIHZhciBuID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTYuMCkudG9TdHJpbmcoMTYpO1xuICAgICAgICBndWlkICs9IG47XG4gICAgICAgIGlmICgoaSA9PSA4KSB8fCAoaSA9PSAxMikgfHwgKGkgPT0gMTYpIHx8IChpID09IDIwKSlcbiAgICAgICAgICAgIGd1aWQgKz0gXCItXCI7XG4gICAgfVxuICAgIHJldHVybiBndWlkO1xufSIsIi8qKlxuICogQGRlc2NyaXB0aW9uIGRhdGV0aW1lIGZvcm1hdHRlclxuICogQHBhcmFtIHtEYXRlfSB2YWx1ZSBhIGRhdGUgb2JqZWN0IHN0cnVjdCBieSBgbmV3IERhdGUoKilgXG4gKiBAcGFyYW0ge1N0cmluZ30gZm10IGEgZm10IHN0cmluZyBsaWtlIFwiTU0tZGQgLi4uXCJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRhdGVUaW1lRm9ybWF0KHZhbHVlLCBmbXQpIHtcbiAgICB2YXIgbyA9IHtcbiAgICAgICAgXCJNK1wiOiB2YWx1ZS5nZXRNb250aCgpICsgMSwgLy/mnIjku71cbiAgICAgICAgXCJkK1wiOiB2YWx1ZS5nZXREYXRlKCksIC8v5pelXG4gICAgICAgIFwiaCtcIjogdmFsdWUuZ2V0SG91cnMoKSwgLy/lsI/ml7ZcbiAgICAgICAgXCJtK1wiOiB2YWx1ZS5nZXRNaW51dGVzKCksIC8v5YiGXG4gICAgICAgIFwicytcIjogdmFsdWUuZ2V0U2Vjb25kcygpLCAvL+enklxuICAgICAgICBcInErXCI6IE1hdGguZmxvb3IoKHZhbHVlLmdldE1vbnRoKCkgKyAzKSAvIDMpLCAvL+Wto+W6plxuICAgICAgICBcIlNcIjogdmFsdWUuZ2V0TWlsbGlzZWNvbmRzKCkgLy/mr6vnp5JcbiAgICB9O1xuICAgIGlmICgvKHkrKS8udGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsICh2YWx1ZS5nZXRGdWxsWWVhcigpICsgXCJcIikuc3Vic3RyKDQgLSBSZWdFeHAuJDEubGVuZ3RoKSk7XG4gICAgZm9yICh2YXIgayBpbiBvKVxuICAgICAgICBpZiAobmV3IFJlZ0V4cChcIihcIiArIGsgKyBcIilcIikudGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChSZWdFeHAuJDEubGVuZ3RoID09IDEpID8gKG9ba10pIDogKChcIjAwXCIgKyBvW2tdKS5zdWJzdHIoKFwiXCIgKyBvW2tdKS5sZW5ndGgpKSk7XG4gICAgcmV0dXJuIGZtdDtcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVMsWUFBWSxDQUFDLEtBQUssQ0FBQztBQUMzQyxJQUFJLEdBQUcsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDO0FBQzlCLFFBQVEsT0FBTyxTQUFTLENBQUM7QUFDekIsS0FBSztBQUNMLElBQUksSUFBSSxPQUFPLEdBQUcsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM3RSxJQUFJLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNoQixJQUFJLElBQUksT0FBTyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNwQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3ZELElBQUksSUFBSSxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekIsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0I7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDOztBQ045RjtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVMsT0FBTyxHQUFHO0FBQ2xDLElBQUksSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ2xCLElBQUksS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNsQyxRQUFRLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM5RCxRQUFRLElBQUksSUFBSSxDQUFDLENBQUM7QUFDbEIsUUFBUSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0QsWUFBWSxJQUFJLElBQUksR0FBRyxDQUFDO0FBQ3hCLEtBQUs7QUFDTCxJQUFJLE9BQU8sSUFBSSxDQUFDO0FBQ2hCOztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLFNBQVMsY0FBYyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7QUFDbkQsSUFBSSxJQUFJLENBQUMsR0FBRztBQUNaLFFBQVEsSUFBSSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDO0FBQ2xDLFFBQVEsSUFBSSxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUU7QUFDN0IsUUFBUSxJQUFJLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRTtBQUM5QixRQUFRLElBQUksRUFBRSxLQUFLLENBQUMsVUFBVSxFQUFFO0FBQ2hDLFFBQVEsSUFBSSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUU7QUFDaEMsUUFBUSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3BELFFBQVEsR0FBRyxFQUFFLEtBQUssQ0FBQyxlQUFlLEVBQUU7QUFDcEMsS0FBSyxDQUFDO0FBQ04sSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDaEgsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbkIsUUFBUSxJQUFJLElBQUksTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3SixJQUFJLE9BQU8sR0FBRyxDQUFDO0FBQ2Y7Ozs7In0=
